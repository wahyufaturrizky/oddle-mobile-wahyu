# Check out https://docs.codemagic.io/yaml/building-a-react-native-app/ for more information
# Please review and update values

workflows:
    react-native-android:
        name: React Native Android
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(...) # <-- Put encrypted CONTENTS of your Gloud crendentials file here
                PACKAGE_NAME: "com.beri.mobileberiandroid.app" # <-- Put your package name here e.g. com.domain.myapp
                CM_KEYSTORE: Encrypted(Z0FBQUFBQmdfUkNkZXl3dC1mM0dyTU5TcHZfV1hPMnJJVU03dVRCTVVJV01uY1Z0dkdaRVY1YTgyVVltSHlDamFZV1dfdFdlRmJJZDgxX1ZyeVJuU24xVnp6YTJnaDdwR3h0LTRIMmY0RWtIZHJwUlZfejZMQkk9) # <-- Put your encrypted keystore file here
                CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmdfUkNyNmcybEU0TllyX2RDZHZYOXU0VEtyRVRNaUE3QmxOZkdVMXhrek5nQWFJMWtNNkxyMUVnQm41dFFRWFkxaXR3VVhPN3dLZ0Roam5KbjZTcWkwYlRsTUE9PQ==) # <-- Put your encrypted keystore password here
                CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmdfUkNyNmcybEU0TllyX2RDZHZYOXU0VEtyRVRNaUE3QmxOZkdVMXhrek5nQWFJMWtNNkxyMUVnQm41dFFRWFkxaXR3VVhPN3dLZ0Roam5KbjZTcWkwYlRsTUE9PQ==) # <-- Put your encrypted keystore alias password here
                CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmdfUkM0bXFUbTNlZ1NzOGFTTHk0a0VNcnR5bjdwM0FIX05ScVZ3Wi1Dek9aUmZnZ196cXM2VzBWMm04M09SMndWZVZrbTNLTm5EWk1VZUdJUXEzeGhoU3Z3anc9PQ==) # <-- Put your encrypted keystore alias username here 
            node: latest
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF               
            - name: Build Android release
              script: |
                # Set environment variable so it can be used to increment build number in android/app/build.gradle
                # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
                # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
                export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
                cd android && ./gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
            email:
                recipients:
                    - user_1@example.com
                    - user_2@example.com
                notify:
                  success: true     # To not receive a notification when a build succeeds
                  failure: false    # To not receive a notification when a build fails
            slack: 
              # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
              channel: '#channel-name'
              notify_on_build_start: true   # To receive a notification when a build starts
              notify:
                success: true               # To not receive a notification when a build succeeds
                failure: false              # To not receive a notification when a build fails
            google_play:
              # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
              credentials: Encrypted(...) # <-- Put your encrypted google-services.json here
              track: alpha
    react-native-ios:
        name: React Native iOS
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                # Env vars for automatic iOS code signing
                # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
                XCODE_WORKSPACE: "ios/YOUR_WORKSPACE_NAME.xcworkspace" # <-- Put the name of your Xcode workspace here
                XCODE_SCHEME: "YOUR_SCHEME_NAME" # <-- Put the name of your Xcode scheme here
                APPLE_ID: Encrypted(Z0FBQUFBQmdfUkFtLUdVSmh5VHp4M195ekpYMlpGYzRMUDZBZ1FVY1RLVlNZYW8yS3NrSVJSZnJ6MWdlTTFJMmpMa2lLcG5fOUU1X3hMU1A5V1I4ZFhmaWEwc0ZEbVZrZWlKMlI2bjE0V2dGZzV3azlRRFBCU2s9) # <-- Put you encrypted Apple ID here
                APP_SPECIFIC_PASSWORD: Encrypted(Z0FBQUFBQmdfUkJhSDJYcS1vbjMtU1U4VDZFcW50b3ZEMThYdzRDb3VQeUh1TnVRUmQyVG5KVXFSYWd3aVN2V2F6aE8yR0ZFYmhNcjBiakQzRUJJUWdwazVpeTdLNUVTNnc9PQ==) # <-- Put your encrypted App Specific Password here. For more information visit: https://support.apple.com/en-us/HT204397
                # https://appstoreconnect.apple.com/access/api
                APP_STORE_CONNECT_ISSUER_ID: Encrypted(Z0FBQUFBQmdfUkFtLUdVSmh5VHp4M195ekpYMlpGYzRMUDZBZ1FVY1RLVlNZYW8yS3NrSVJSZnJ6MWdlTTFJMmpMa2lLcG5fOUU1X3hMU1A5V1I4ZFhmaWEwc0ZEbVZrZWlKMlI2bjE0V2dGZzV3azlRRFBCU2s9) # <-- Put your App Store Connect Issuer Id here
                APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(Z0FBQUFBQmdfUkFtLUdVSmh5VHp4M195ekpYMlpGYzRMUDZBZ1FVY1RLVlNZYW8yS3NrSVJSZnJ6MWdlTTFJMmpMa2lLcG5fOUU1X3hMU1A5V1I4ZFhmaWEwc0ZEbVZrZWlKMlI2bjE0V2dGZzV3azlRRFBCU2s9) # <-- Put your App Store Connect Key Identifier here
                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
                CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
                BUNDLE_ID: "YOUR_BUNDLE_ID_HERE" # <-- Put your Bundle Id here e.g com.domain.myapp
                APP_STORE_APP_ID: 1555555551 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
            node: latest
            xcode: 12.5
            cocoapods: default
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                keychain initialize
            - name: Fetch signing files
              script: |
                # For information about Codemagic CLI commands visit: https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md
                # For details about the --type paramater below - https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store
                app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
            - name: Use system default keychain
              script: |
                keychain add-certificates
            - name: Increment build number
              script: |
                #!/bin/sh
                set -e
                set -x
                cd $FCI_BUILD_DIR/ios
                # agvtool new-version -all $(($BUILD_NUMBER + 1))
                agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles --warn-only
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME" 
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        publishing:
          # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
          email:
            recipients:
              - user_1@example.com
              - user_2@example.com
            notify:
              success: true     # To not receive a notification when a build succeeds
              failure: false    # To not receive a notification when a build fails
          slack: 
            # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
            channel: '#channel-name'
            notify_on_build_start: true   # To receive a notification when a build starts
            notify:
              success: true               # To not receive a notification when a build succeeds
              failure: false              # To not receive a notification when a build fails
          app_store_connect:                 
              apple_id: $APPLE_ID
              password: $APP_SPECIFIC_PASSWORD
    